generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model benutzertogetraenk {
  id_benutzer String   @db.Uuid
  id_getraenk String   @db.Uuid
  menge       BigInt?
  benutzer    benutzer @relation(fields: [id_benutzer], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_btg_benutzer")
  getraenk    getraenk @relation(fields: [id_getraenk], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_btg_getraenk")

  @@id([id_benutzer, id_getraenk], map: "pk_btg")
}

model getraenk {
  id                 String               @id(map: "pk_getraenk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String               @db.String(256)
  preis              String               @db.Char(2)
  benutzertogetraenk benutzertogetraenk[]
}

model rolle {
  id              String            @id(map: "pk_rolle") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String            @db.String(256)
  rolletobenutzer rolletobenutzer[]
}

model rolletobenutzer {
  id_rolle    String   @db.Uuid
  id_benutzer String   @db.Uuid
  benutzer    benutzer @relation(fields: [id_benutzer], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rtb_benutzer")
  rolle       rolle    @relation(fields: [id_rolle], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rtb_rolle")

  @@id([id_benutzer, id_rolle], map: "pk_rtb")
}

model benutzer {
  id                 String               @id(map: "user_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String               @unique @db.String(255)
  firstname          String               @db.String(255)
  lastname           String               @db.String(255)
  mobile             String?              @db.String(255)
  salt               String               @db.Char(16)
  password           String               @db.String(255)
  isinitialpassword  Boolean              @default(true)
  benutzertogetraenk benutzertogetraenk[]
  rolletobenutzer    rolletobenutzer[]
}
